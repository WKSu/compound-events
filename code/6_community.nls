to community-detection
  nw:set-context bands links
  if color_clusters? = true [ 
  color-clusters nw:louvain-communities
  ]
  
  foreach nw:louvain-communities [ [comm] ->
    ask comm [ set community comm
      set community_name min-one-of comm [who]
      set community_size count comm  ]
  ]
  
  set unique_communities [ ]
  
  ask bands [
    if community_size > 1 [ 
      set unique_communities lput community_name unique_communities
    ]
  ]
  
  set unique_communities remove-duplicates unique_communities
  set agentset_unique_communities turtle-set unique_communities

 
end

to color-clusters [ clusters ]
  ; reset all colors
  ask turtles [ set color gray ]
  ask links [ set color gray - 2 ]
  let n length clusters
  ; Generate a unique hue for each cluster
  let hues n-values n [ i -> (360 * i / n) ]

  ; loop through the clusters and colors zipped together
  (foreach clusters hues [ [cluster hue] ->
    ask cluster [ ; for each node in the cluster
                  ; give the node the color of its cluster
      set color hsb hue 100 100
      ; Color links contained in the cluster slightly darker than the cluster color
      ask my-links with [ member? other-end cluster ] [ set color hsb hue 100 75 ]
    ]
  ])
end